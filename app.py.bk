from flask import Flask, jsonify , request, render_template , session, abort, flash , url_for, redirect 
from functools import wraps

import os, json,shutil
import requests, jinja2
import random
from bs4 import BeautifulSoup
from time import gmtime, strftime
from datetime import datetime


app = Flask(__name__)


@app.route('/')
def index():
    return 'Flask is running!'


@app.route('/data')
def names():
    data = {"names": ["John", "Jacob", "Julie", "Jennifer"]}
    return jsonify(data)

@app.route('/report')

def report():
    with open('config/api2sdk2nuget.json', 'r') as f:
        map_object = json.load(f)

    with open('config/fudge.json', 'r') as f:
        build_file = json.load(f)
        
    with open('changes/latest.json', 'r') as f:
        changes = json.load(f)

    new_projects = changes['new_projects']
    existing_projects = changes['existing_projects']
    report_time = changes['report_time']
    number_changes = sum([1 if existing_projects[c].get('changes') else 0 for c in existing_projects ])

    """

    from jinja2 import Environment, FileSystemLoader

    env = Environment(loader=FileSystemLoader('templates'))
    template = env.get_template('jinja-template_v4.html')

    output = template.render(new_projects=new_projects, existing_projects=existing_projects, 
                            recent_sha = '123',recent_date='abc', base=build_file, 
                            sdk_map= map_object, seq = sorted(map_object))
    #print output
    #write to file. 
    with open('html/report_april_test.html', 'w') as f:
        f.write(output)
    """

    return render_template('jinja-template_v4.html', new_projects=new_projects, existing_projects=existing_projects, 
                            recent_sha = '123',recent_date='abc', base=build_file, 
                            sdk_map= map_object, seq = sorted(map_object), number_changes=number_changes, report_time=report_time)

if __name__ == '__main__':
    app.run()


